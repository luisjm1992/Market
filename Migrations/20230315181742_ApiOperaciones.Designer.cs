// <auto-generated />
using System;
using Market.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Market.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230315181742_ApiOperaciones")]
    partial class ApiOperaciones
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Market.Models.Mercado", b =>
                {
                    b.Property<int>("IdMercado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMercado"), 1L, 1);

                    b.Property<string>("NameMarket")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceMarket")
                        .HasColumnType("float");

                    b.HasKey("IdMercado");

                    b.ToTable("Mercados");
                });

            modelBuilder.Entity("Market.Models.Operation", b =>
                {
                    b.Property<int>("IdOperation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOperation"), 1L, 1);

                    b.Property<double>("DineroOperacion")
                        .HasColumnType("float");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdMercado")
                        .HasColumnType("int");

                    b.Property<int>("IdSentimiento")
                        .HasColumnType("int");

                    b.Property<int?>("MercadoFkIdMercado")
                        .HasColumnType("int");

                    b.Property<double>("PrecioEntrada")
                        .HasColumnType("float");

                    b.Property<double>("PrecioSalida")
                        .HasColumnType("float");

                    b.Property<int>("Puntos")
                        .HasColumnType("int");

                    b.Property<string>("Resultado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SentimientoFkIdSentimiento")
                        .HasColumnType("int");

                    b.Property<int>("Stop")
                        .HasColumnType("int");

                    b.Property<string>("TpOperation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TpOperationString");

                    b.HasKey("IdOperation");

                    b.HasIndex("MercadoFkIdMercado");

                    b.HasIndex("SentimientoFkIdSentimiento");

                    b.ToTable("Operations");
                });

            modelBuilder.Entity("Market.Models.Sentimiento", b =>
                {
                    b.Property<int>("IdSentimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSentimiento"), 1L, 1);

                    b.Property<string>("NameSentimiento")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdSentimiento");

                    b.ToTable("Sentimientos");
                });

            modelBuilder.Entity("Market.Models.Operation", b =>
                {
                    b.HasOne("Market.Models.Mercado", "MercadoFk")
                        .WithMany("OperationList")
                        .HasForeignKey("MercadoFkIdMercado");

                    b.HasOne("Market.Models.Sentimiento", "SentimientoFk")
                        .WithMany("OperationList")
                        .HasForeignKey("SentimientoFkIdSentimiento");

                    b.Navigation("MercadoFk");

                    b.Navigation("SentimientoFk");
                });

            modelBuilder.Entity("Market.Models.Mercado", b =>
                {
                    b.Navigation("OperationList");
                });

            modelBuilder.Entity("Market.Models.Sentimiento", b =>
                {
                    b.Navigation("OperationList");
                });
#pragma warning restore 612, 618
        }
    }
}
